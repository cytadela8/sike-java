/*
 * Copyright 2020 Wultra s.r.o.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.wultra.security.pqc.sike.param;

import com.wultra.security.pqc.sike.math.api.*;
import com.wultra.security.pqc.sike.math.optimized.Fp2PointProjective;
import com.wultra.security.pqc.sike.math.optimized.IsogenyProjective;
import com.wultra.security.pqc.sike.math.optimized.MontgomeryProjective;
import com.wultra.security.pqc.sike.math.optimized.fp.Fp2ElementFactoryOpti;
import com.wultra.security.pqc.sike.math.optimized.fp.Fp2ElementOpti;
import com.wultra.security.pqc.sike.math.optimized.fp.FpElementOpti;
import com.wultra.security.pqc.sike.math.reference.Fp2PointAffine;
import com.wultra.security.pqc.sike.math.reference.IsogenyAffine;
import com.wultra.security.pqc.sike.math.reference.MontgomeryAffine;
import com.wultra.security.pqc.sike.math.reference.fp.Fp2ElementFactoryRef;
import com.wultra.security.pqc.sike.math.reference.fp.Fp2ElementRef;
import com.wultra.security.pqc.sike.math.reference.fp.FpElementRef;
import com.wultra.security.pqc.sike.model.ImplementationType;

import java.math.BigInteger;
import java.security.InvalidParameterException;
import java.util.Objects;

/**
 * SIKE parameters for variant SIKEp610.
 *
 * @author Roman Strobl, roman.strobl@wultra.com
 */
public class SikeParamP610 implements SikeParam {

    private final ImplementationType implementationType;
    private final Fp2ElementFactory fp2ElementFactory;
    private final Montgomery montgomery;
    private final Isogeny isogeny;

    private String name;

    // Basic Montgomery curve parameters
    private Fp2Element a;
    private Fp2Element b;
    private int eA;
    private int eB;
    private BigInteger ordA;
    private BigInteger ordB;
    private int bitsA;
    private int bitsB;

    // Field prime and public points
    private BigInteger prime;
    private Fp2Point pA;
    private Fp2Point qA;
    private Fp2Point rA;
    private Fp2Point pB;
    private Fp2Point qB;
    private Fp2Point rB;

    // Sizes of generated bytes
    private int cryptoBytes;
    private int messageBytes;

    // Configuration of isogeny computation optimizations
    private int treeRowsA;
    private int treeRowsB;
    private int treePointsA;
    private int treePointsB;
    private int[] strategyA;
    private int[] strategyB;

    /**
     * Constructor of SIKE parameters.
     * @param implementationType Implementation type.
     */
    public SikeParamP610(ImplementationType implementationType) {
        this.implementationType = implementationType;
        if (implementationType == ImplementationType.REFERENCE) {
            fp2ElementFactory = new Fp2ElementFactoryRef(this);
            montgomery = new MontgomeryAffine();
            isogeny = new IsogenyAffine();
        } else if (implementationType == ImplementationType.OPTIMIZED) {
            fp2ElementFactory = new Fp2ElementFactoryOpti(this);
            montgomery = new MontgomeryProjective();
            isogeny = new IsogenyProjective();
        } else {
            throw new InvalidParameterException("Unsupported implementation type: " + implementationType);
        }
        init();
    }

    @Override
    public ImplementationType getImplementationType() {
        return implementationType;
    }

    @Override
    public Fp2ElementFactory getFp2ElementFactory() {
        return fp2ElementFactory;
    }

    @Override
    public Montgomery getMontgomery() {
        return montgomery;
    }

    @Override
    public Isogeny getIsogeny() {
        return isogeny;
    }

    @Override
    public String getName() {
        return name;
    }

    @Override
    public Fp2Element getA() {
        return a;
    }

    @Override
    public Fp2Element getB() {
        return b;
    }

    @Override
    public int getEA() {
        return eA;
    }

    @Override
    public int getEB() {
        return eB;
    }

    @Override
    public BigInteger getOrdA() {
        return ordA;
    }

    @Override
    public BigInteger getOrdB() {
        return ordB;
    }

    @Override
    public int getBitsA() {
        return bitsA;
    }

    @Override
    public int getBitsB() {
        return bitsB;
    }

    @Override
    public byte getMaskA() {
        return 0x01;
    }

    @Override
    public byte getMaskB() {
        return (byte) 0xFF;
    }

    @Override
    public BigInteger getPrime() {
        return prime;
    }

    @Override
    public Fp2Point getPA() {
        return pA;
    }

    @Override
    public Fp2Point getQA() {
        return qA;
    }

    @Override
    public Fp2Point getRA() {
        return rA;
    }

    @Override
    public Fp2Point getPB() {
        return pB;
    }

    @Override
    public Fp2Point getQB() {
        return qB;
    }

    @Override
    public Fp2Point getRB() {
        return rB;
    }

    @Override
    public int getCryptoBytes() {
        return cryptoBytes;
    }

    @Override
    public int getMessageBytes() {
        return messageBytes;
    }

    @Override
    public int getTreeRowsA() {
        return treeRowsA;
    }

    @Override
    public int getTreeRowsB() {
        return treeRowsB;
    }

    @Override
    public int getTreePointsA() {
        return treePointsA;
    }

    @Override
    public int getTreePointsB() {
        return treePointsB;
    }

    @Override
    public int[] getStrategyA() {
        return strategyA;
    }

    @Override
    public int[] getStrategyB() {
        return strategyB;
    }

    @Override
    public int getFpWords() {
        return 10;
    }

    @Override
    public int getZeroWords() {
        return 4;
    }

    private final FpElementOpti p = new FpElementOpti(this, new long[]{
            0xFFFFFFFFFFFFFFFFL,
            0xFFFFFFFFFFFFFFFFL,
            0xFFFFFFFFFFFFFFFFL,
            0xFFFFFFFFFFFFFFFFL,
            0x6E01FFFFFFFFFFFFL,
            0xB1784DE8AA5AB02EL,
            0x9AE7BF45048FF9ABL,
            0xB255B2FA10C4252AL,
            0x819010C251E7D88CL,
            0x000000027BF6A768L
    });

    @Override
    public FpElementOpti getP() {
        return p;
    }

    private final FpElementOpti p1 = new FpElementOpti(this, new long[]{
            0x0000000000000000L,
            0x0000000000000000L,
            0x0000000000000000L,
            0x0000000000000000L,
            0x6E02000000000000L,
            0xB1784DE8AA5AB02EL,
            0x9AE7BF45048FF9ABL,
            0xB255B2FA10C4252AL,
            0x819010C251E7D88CL,
            0x000000027BF6A768L
    });

    @Override
    public FpElementOpti getP1() {
        return p1;
    }

    private final FpElementOpti px2 = new FpElementOpti(this, new long[]{
            0xFFFFFFFFFFFFFFFEL,
            0xFFFFFFFFFFFFFFFFL,
            0xFFFFFFFFFFFFFFFFL,
            0xFFFFFFFFFFFFFFFFL,
            0xDC03FFFFFFFFFFFFL,
            0x62F09BD154B5605CL,
            0x35CF7E8A091FF357L,
            0x64AB65F421884A55L,
            0x03202184A3CFB119L,
            0x00000004F7ED4ED1L
    });

    private final FpElementOpti pr2 = new FpElementOpti(this, new long[]{
            0xE75F5D201A197727L,
            0xE0B85963B627392EL,
            0x6BC1707818DE493DL,
            0xDC7F419940D1A0C5L,
            0x7358030979EDE54AL,
            0x84F4BEBDEED75A5CL,
            0x7ECCA66E13427B47L,
            0xC5BB4E65280080B3L,
            0x7019950F516DA19AL,
            0x000000008E290FF3L
    });

    @Override
    public FpElementOpti getPx2() {
        return px2;
    }

    @Override
    public FpElementOpti getPR2() {
        return pr2;
    }

    public int[] getPowStrategy() {
        return new int[]{5, 4, 5, 6, 4, 6, 11, 8, 6, 8, 6, 3, 7, 3, 8, 4, 6, 7, 6, 7, 4, 5, 6, 4, 8, 5, 6, 6, 4, 6, 6, 3, 6, 9, 8, 4, 6, 6, 3, 8, 1, 9, 5, 6, 6, 6, 6, 1, 11, 7, 1, 13, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3};
    }

    public int[] getMulStrategy() {
        return new int[]{13, 7, 6, 9, 5, 8, 12, 0, 1, 4, 8, 3, 15, 1, 8, 4, 12, 10, 13, 11, 6, 0, 1, 0, 4, 4, 10, 6, 3, 7, 15, 2, 2, 4, 15, 7, 6, 11, 1, 11, 0, 9, 7, 8, 10, 5, 10, 0, 11, 13, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 3};
    }

    public int getInitialMul() {
        return 9;
    }

    /**
     * Initialize variant SIKEp610.
     */
    private void init() {
        // EA = 305, EB = 192
        int FIELD_PRIME_PARAM_EA = 305;
        int FIELD_PRIME_PARAM_EB = 192;
        this.prime = new BigInteger("27BF6A768819010C251E7D88CB255B2FA10C4252A9AE7BF45048FF9ABB1784DE8AA5AB02E6E01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF", 16);

        // A = 6, B = 1
        Fp2Element PUBLIC_PARAM_ELEMENT_A = fp2ElementFactory.generate(new BigInteger("6"));
        Fp2Element PUBLIC_PARAM_ELEMENT_B = fp2ElementFactory.one();

        Fp2Point PUBLIC_POINT_PA, PUBLIC_POINT_QA, PUBLIC_POINT_RA;
        Fp2Point PUBLIC_POINT_PB, PUBLIC_POINT_QB, PUBLIC_POINT_RB;

        if (implementationType == ImplementationType.REFERENCE) {
            // Public points PA and QA
            FpElementRef PUBLIC_POINT_PA_X0 = new FpElementRef(this, new BigInteger("1B368BC6019B46CD802129209B3E65B98BC64A92BC4DB2F9F3AC96B97A1B9C124DF549B528F18BEECB1666D27D47530435E84221272F3A97FB80527D8F8A359F8F1598D365744CA3070A5F26C", 16));
            FpElementRef PUBLIC_POINT_PA_X1 = new FpElementRef(this, new BigInteger("1459685DCA7112D1F6030DBC98F2C9CBB41617B6AD913E6523416CCBD8ED9C7841D97DF83092B9B3F2AF00D62E08DAD8FA743CBCCCC1782BE0186A3432D3C97C37CA16873BEDE01F0637C1AA2", 16));
            FpElementRef PUBLIC_POINT_PA_Y0 = new FpElementRef(this, new BigInteger("1CD75CF512FFA9DF878EF495001A57ABC07FC7CE9BB488BB52DDCD7272D8A4FD17DD258ED3F844C862CF48803B9AC2668C7CB79C396128763B578080C30D14CA7EB709F98E3E682A391FB35A7", 16));
            FpElementRef PUBLIC_POINT_PA_Y1 = new FpElementRef(this, new BigInteger("2001062A6289E4082CED884029207A1ACDEC525D7BC165A6CFF8BB469A8588950A416DBB924D2D673E3D6C32D232F6E6ADA62B37608F652C0B8628827B304BF1365D8211346207B24EFF09458", 16));
            FpElementRef PUBLIC_POINT_QA_X0 = new FpElementRef(this, new BigInteger("25DA39EC90CDFB9BC0F772CDA52CB8B5A9F478D7AF8DBBA0AEB3E52432822DD88C38F4E3AEC0746E56149F1FE89707C77F8BA4134568629724F4A8E34B06BFE5C5E66E0867EC38B283798B8A", 16));
            FpElementRef PUBLIC_POINT_QA_X1 = new FpElementRef(this, new BigInteger("2250E1959256AE502428338CB4715399551AEC78D8935B2DC73FCDCFBDB1A0118A2D3EF03489BA6F637B1C7FEE7E5F31340A1A537B76B5B736B4CDD284918918E8C986FC02741FB8C98F0A0ED", 16));
            FpElementRef PUBLIC_POINT_QA_Y0 = new FpElementRef(this, new BigInteger("A4FD5539025C0611E4B1CEC3C36F0D7590C035D3A25AD93022849CCEB3F67E4B1DBE988404290DD8B87B8D5E69ED3B0C5CDBCA248DC9D174CF762012CFE2D725CFD92057F2DBF8B04C7B12CC", 16));
            FpElementRef PUBLIC_POINT_QA_Y1 = new FpElementRef(this, new BigInteger("201C807BD738624E22B87554A2E053A46A9573BA863D4A9D309533E30B27BF7DD8137F5CE0F79C263D9D050541D69817A839085A76395F879315F6999E3441FC8FB3936DEE1BEF5B4E0E25096", 16));
            FpElementRef PUBLIC_POINT_RA_X0 = new FpElementRef(this, new BigInteger("1B36A006D05F9E370D5078CCA54A16845B2BFF737C865368707C0DBBE9F5A62A9B9C79ADF11932A9FA4806210E25C92DB019CC146706DFBC7FA2638ECC4343C1E390426FAA7F2F07FDA163FB5", 16));
            FpElementRef PUBLIC_POINT_RA_X1 = new FpElementRef(this, new BigInteger("183C9ABF2297CA69699357F58FED92553436BBEBA2C3600D89522E7009D19EA5D6C18CFF993AA3AA33923ED93592B0637ED0B33ADF12388AE912BC4AE4749E2DF3C3292994DCF37747518A992", 16));
            // The Y points are not defined for R point, only x coordinates are used in optimized version
            FpElementRef PUBLIC_POINT_RA_Y0 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_RA_Y1 = new FpElementRef(this, new BigInteger("0", 16));
            PUBLIC_POINT_PA = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_PA_X0, PUBLIC_POINT_PA_X1), new Fp2ElementRef(this, PUBLIC_POINT_PA_Y0, PUBLIC_POINT_PA_Y1));
            PUBLIC_POINT_QA = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_QA_X0, PUBLIC_POINT_QA_X1), new Fp2ElementRef(this, PUBLIC_POINT_QA_Y0, PUBLIC_POINT_QA_Y1));
            PUBLIC_POINT_RA = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_RA_X0, PUBLIC_POINT_RA_X1), new Fp2ElementRef(this, PUBLIC_POINT_RA_Y0, PUBLIC_POINT_RA_Y1));

            // Public points PB, QB and RB
            FpElementRef PUBLIC_POINT_PB_X0 = new FpElementRef(this, new BigInteger("1587822E647707ED4313D3BE6A811A694FB201561111838A0816BFB5DEC625D23772DE48A26D78C04EEB26CA4A571C67CE4DC4C620282876B2F2FC2633CA548C3AB0C45CC991417A56F7FEFEB", 16));
            FpElementRef PUBLIC_POINT_PB_X1 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_PB_Y0 = new FpElementRef(this, new BigInteger("14F295114B69D4769AC06DD07F051AD1114BCB7FA6B6EDE19F840969AFD56FD1F728907D3320A0309462A9444D24FE754666DB2470080951B31C2AC59704ABC7670C3C3A992C3C1629791F30", 16));
            FpElementRef PUBLIC_POINT_PB_Y1 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_QB_X0 = new FpElementRef(this, new BigInteger("14E647CB19B7EAAAC640A9C26B9C26DB7DEDA8FC9399F4F8CE620D2B2200480F4338755AE16D0E090F15EA1882166836A478C6E161C938E4EB8C2DD779B45FFDD17DCDF158AF48DE126B3A047", 16));
            FpElementRef PUBLIC_POINT_QB_X1 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_QB_Y0 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_QB_Y1 = new FpElementRef(this, new BigInteger("E674067F5EA6DE85545C0A99E9E71E64FABFDC281D1E540FEDA47A56ED3ADCDDE1841083FABC7954B467C71AC6349B04974A7F9B688C5F735632FEB394146B0A080880069D8DA3324EDF795B", 16));
            FpElementRef PUBLIC_POINT_RB_X0 = new FpElementRef(this, new BigInteger("1DB73BC2DE666D24E59AF5E23B79251BA0D189629EF87E56C38778A448FACE312D08EDFB876C3FD45ECF3746D96E2CADBBA08B1A206C47DDD93137059E34C90E2E42E10F30F6E5F52DED74222", 16));
            FpElementRef PUBLIC_POINT_RB_X1 = new FpElementRef(this, new BigInteger("1B2C30180DAF5D91871555CE8EFEC76A4D521F877B754311228C7180A3E2318B4E7A00341FF99F34E35BF7A1053CA76FD77C0AFAE38E2091862AB4F1DD4C8D9C83DE37ACBA6646EDB4C238B48", 16));
            // The Y points are not defined for R point, only x coordinates are used in optimized version
            FpElementRef PUBLIC_POINT_RB_Y0 = new FpElementRef(this, new BigInteger("0", 16));
            FpElementRef PUBLIC_POINT_RB_Y1 = new FpElementRef(this, new BigInteger("0", 16));
            PUBLIC_POINT_PB = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_PB_X0, PUBLIC_POINT_PB_X1), new Fp2ElementRef(this, PUBLIC_POINT_PB_Y0, PUBLIC_POINT_PB_Y1));
            PUBLIC_POINT_QB = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_QB_X0, PUBLIC_POINT_QB_X1), new Fp2ElementRef(this, PUBLIC_POINT_QB_Y0, PUBLIC_POINT_QB_Y1));
            PUBLIC_POINT_RB = new Fp2PointAffine(new Fp2ElementRef(this, PUBLIC_POINT_RB_X0, PUBLIC_POINT_RB_X1), new Fp2ElementRef(this, PUBLIC_POINT_RB_Y0, PUBLIC_POINT_RB_Y1));
        } else {
            FpElement PUBLIC_POINT_PA_X0 = new FpElementOpti(this,  new long[]{
                    0x5019EC96A75AC57AL,
                    0x8AEA0E717712C6F1L,
                    0x03C067C819D29E5EL,
                    0x59F454425FE307D9L,
                    0x6D29215D9AD5E6D4L,
                    0xD8C5A27CDC9DD34AL,
                    0x972DC274DAB435B3L,
                    0x82A597C70A80E10FL,
                    0x48175986EFED547FL,
                    0x00000000671A3592L
            });
            FpElement PUBLIC_POINT_PA_X1 = new FpElementOpti(this,  new long[]{
                    0xE4BA9CC3EEEC53F4L,
                    0xBD34E4FEDB0132D3L,
                    0x1B7125C87BEE960CL,
                    0x25D615BF3CFAA355L,
                    0xFC8EC20DC367D66AL,
                    0xB44F3FD1CC73289CL,
                    0xD84BF51195C2E012L,
                    0x38D7C756EB370F48L,
                    0xBBC236249F94F72AL,
                    0x000000013020CC63L
            });
            FpElement PUBLIC_POINT_QA_X0 = new FpElementOpti(this,  new long[]{
                    0x1D7C945D3DBCC38CL,
                    0x9A5F7C12CA8BA5B9L,
                    0x1E8F87985B01CBE3L,
                    0xD2CABF82F5BC5235L,
                    0x3BDE474ECCA9FAA2L,
                    0xB98CD975DF9FB0A8L,
                    0x444E4464B9C67790L,
                    0xCB2E888565CE6AD9L,
                    0xDB64FFE2A1C350E2L,
                    0x00000001D7532756L
            });
            FpElement PUBLIC_POINT_QA_X1 = new FpElementOpti(this,  new long[]{
                    0x1E8B3AA2382C9079L,
                    0x28CB31E08A943C00L,
                    0xE04D02266E8A63E1L,
                    0x84A2D260214EF65FL,
                    0xD5933DA25018E226L,
                    0xBC8BF038928C4BA9L,
                    0x91E9D0CB7EAF58A9L,
                    0x04A4627B75E008E1L,
                    0x58CEF27583E50C2EL,
                    0x00000002170DDF44L
            });
            FpElement PUBLIC_POINT_RA_X0 = new FpElementOpti(this,  new long[]{
                    0x261DD0782CEC958DL,
                    0xC25B3AE64BBC0311L,
                    0x9F21B8A8981B15FEL,
                    0xA3C0B52CD5FFC45BL,
                    0x5D2E65A016702C6AL,
                    0x8C5586CA98722EDEL,
                    0x61490A967A6B4B1AL,
                    0xFA64E30231F719AFL,
                    0x9CEAB8B6301BB2DFL,
                    0x00000000CF5AEA7DL
            });
            FpElement PUBLIC_POINT_RA_X1 = new FpElementOpti(this,  new long[]{
                    0xB980435A77B912C0L,
                    0x2B4A97F70E0FC873L,
                    0x415C7FA4DE96F43CL,
                    0xE5EED95643E443FDL,
                    0xCBE18DB57C51B354L,
                    0x51C96C3FFABD2D46L,
                    0x5C14637B9A5765D6L,
                    0x45D2369C4D0199A5L,
                    0x25A1F9C5BBF1E683L,
                    0x000000025AD7A11BL
            });
            PUBLIC_POINT_PA = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_PA_X0, PUBLIC_POINT_PA_X1), fp2ElementFactory.one());
            PUBLIC_POINT_QA = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_QA_X0, PUBLIC_POINT_QA_X1), fp2ElementFactory.one());
            PUBLIC_POINT_RA = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_RA_X0, PUBLIC_POINT_RA_X1), fp2ElementFactory.one());
            FpElement PUBLIC_POINT_PB_X0 = new FpElementOpti(this,  new long[]{
                    0xC6C8E180E41884BAL,
                    0x2161D2F4FBC32B95L,
                    0xCBF83091BDB34092L,
                    0xD742CC0AD4CC7E38L,
                    0x61A1FA7E1B14FBD7L,
                    0xF0E5FC70137597C4L,
                    0x1F0C8F2585E20B1FL,
                    0xC68E44A1C032A4C2L,
                    0xE3C65FB8AF155A0DL,
                    0x00000001409EE8D5L
            });
            FpElement PUBLIC_POINT_PB_X1 = new FpElementOpti(this,  new long[]{
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L
            });
            FpElement PUBLIC_POINT_QB_X0 = new FpElementOpti(this,  new long[]{
                    0xF586DB4A16BE1880L,
                    0x712F10D95E6C65A9L,
                    0x9D5AAC3B83584B87L,
                    0x4ECDAA98182C8261L,
                    0xAD7D4C15588FD230L,
                    0x4197C54E96B7D926L,
                    0xED15BB13E8C588EDL,
                    0x3E299AEAD5AAD7C7L,
                    0xF36B25F1BD579F79L,
                    0x000000021CE65B5BL
            });
            FpElement PUBLIC_POINT_QB_X1 = new FpElementOpti(this,  new long[]{
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L,
                    0x0000000000000000L
            });
            FpElement PUBLIC_POINT_RB_X0 = new FpElementOpti(this,  new long[]{
                    0x7A87897A0C4C3FD7L,
                    0x3C1879ECD4D33D76L,
                    0x595C28A36FFBA1A0L,
                    0xF53FF66A2A7FD0FBL,
                    0xB39F5A91230E56FAL,
                    0x81F21610DA3EA8B5L,
                    0xEBB3B9A627428A90L,
                    0x8661123B35748010L,
                    0xE196173B9C48781DL,
                    0x00000002198166ACL
            });
            FpElement PUBLIC_POINT_RB_X1 = new FpElementOpti(this,  new long[]{
                    0x5E3CC79B37006D6AL,
                    0xE0358A9AB2EA7923L,
                    0x3B725CB595180951L,
                    0x0724637F1DD0C191L,
                    0x7BB031B67DAB9D19L,
                    0x53CCB8BECEDD3435L,
                    0xEE5DF7FFEBFA7A0AL,
                    0x899EDB7D8B9694C4L,
                    0x0CA38EB4AE5506B6L,
                    0x00000001489DE1CDL
            });
            PUBLIC_POINT_PB = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_PB_X0, PUBLIC_POINT_PB_X1), fp2ElementFactory.one());
            PUBLIC_POINT_QB = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_QB_X0, PUBLIC_POINT_QB_X1), fp2ElementFactory.one());
            PUBLIC_POINT_RB = new Fp2PointProjective(new Fp2ElementOpti(this, PUBLIC_POINT_RB_X0, PUBLIC_POINT_RB_X1), fp2ElementFactory.one());
        }
        this.name = "SIKEp610";
        this.a = PUBLIC_PARAM_ELEMENT_A;
        this.b = PUBLIC_PARAM_ELEMENT_B;
        this.eA = FIELD_PRIME_PARAM_EA;
        this.eB = FIELD_PRIME_PARAM_EB;
        this.ordA = new BigInteger("65185151242703554760590262029100101153646988597309960020356494379340201592426774597868716032");
        this.ordB = new BigInteger("40483766022843281411184472189571654752207506882090305742200116101065766026718820758174775041");
        this.bitsA = 305;
        this.bitsB = 305;
        this.pA = PUBLIC_POINT_PA;
        this.qA = PUBLIC_POINT_QA;
        this.rA = PUBLIC_POINT_RA;
        this.pB = PUBLIC_POINT_PB;
        this.qB = PUBLIC_POINT_QB;
        this.rB = PUBLIC_POINT_RB;
        this.cryptoBytes = 24;
        this.messageBytes = 24;
        this.treeRowsA = 152;
        this.treeRowsB = 192;
        this.treePointsA = 8;
        this.treePointsB = 10;
        this.strategyA = new int[]{67, 37, 21, 12, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1, 16, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 33, 16, 8, 5, 2, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 16, 8, 4, 2, 1, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1};
        this.strategyB = new int[]{86, 48, 27, 15, 8, 4, 2, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 12, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 21, 12, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1, 38, 21, 12, 7, 4, 2, 1, 1, 2, 1, 1, 3, 2, 1, 1, 1, 1, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1, 17, 9, 5, 3, 2, 1, 1, 1, 1, 2, 1, 1, 1, 4, 2, 1, 1, 1, 2, 1, 1, 8, 4, 2, 1, 1, 1, 2, 1, 1, 4, 2, 1, 1, 2, 1, 1};
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        SikeParamP610 that = (SikeParamP610) o;
        return implementationType == that.implementationType &&
                name.equals(that.name);
    }

    @Override
    public int hashCode() {
        return Objects.hash(implementationType, name);
    }
}
